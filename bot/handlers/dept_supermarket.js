const photoHandler = require('../utils/photoHandler');
const { Scenes, Markup } = require("telegraf");
const db = require("../services/db");

const deptSupermarketScene = new Scenes.WizardScene(
  "dept_supermarket",
  async (ctx) => {
    ctx.session.report = {};
    await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –æ—Ç—á—ë—Ç–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î):");
    return ctx.wizard.next();
  },
  async (ctx) => {
    ctx.session.report.report_date = ctx.message.text;
    await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    ctx.session.report.merch_name = ctx.message.text;
    await ctx.reply("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    ctx.session.report.merch_phone = ctx.message.text;
    await ctx.reply("–°–∫–æ–ª—å–∫–æ —à—Ç—É–∫ —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ?");
    return ctx.wizard.next();
  },
  async (ctx) => {
    ctx.session.report.product_count = ctx.message.text;
    await ctx.reply(
      "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –º–∞–≥–∞–∑–∏–Ω–∞",
      Markup.keyboard([
        Markup.button.locationRequest("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é"),
      ]).resize()
    );
    return ctx.wizard.next();
  },
  async (ctx) => {
    if (!ctx.message.location) {
      await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É.");
      return;
    }
    ctx.session.report.latitude = ctx.message.location.latitude;
    ctx.session.report.longitude = ctx.message.location.longitude;
    await ctx.reply(
      "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
      Markup.removeKeyboard()
    );
    return ctx.wizard.next();
  },
  async (ctx) => {
    if (!ctx.message.photo) {
      await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ.");
      return;
    }
    const fileId = ctx.message.photo[ctx.message.photo.length - 1].file_id;
    const fileLink = await ctx.telegram.getFileLink(fileId);
    ctx.session.report.photo_url = fileLink.href;

      try {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ç–æ –¥–ª—è S3
    ctx.session.report.s3_url = await photoHandler.processPhoto(fileLink.href);
  } catch (error) {
    console.error('Failed to upload to S3:', error);
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ S3 –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω
    ctx.session.report.s3_url = null;
  }

    await ctx.reply(
      "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç?",
      Markup.keyboard([["–î–ê", "–ù–ï–¢"]]).resize()
    );
    return ctx.wizard.next();
  },
  async (ctx) => {
    if (ctx.message.text === "–î–ê") {
      try {

const query = `
          INSERT INTO reports_a
    (report_date, merch_name, merch_phone, product_count, latitude, longitude, photo_url, s3_url)
  VALUES ($1,$2,$3,$4,$5,$6,$7,$8)
`;
        const values = [
          ctx.session.report.report_date,
          ctx.session.report.merch_name,
          ctx.session.report.merch_phone,
          ctx.session.report.product_count,
          ctx.session.report.latitude,
          ctx.session.report.longitude,
          ctx.session.report.photo_url,
           ctx.session.report.s3_url
        ];
        await db.query(query, values);
        await ctx.reply("‚úÖ –û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!", Markup.removeKeyboard());
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ë–î:", err);
        await ctx.reply(
          "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á—ë—Ç–∞.",
          Markup.removeKeyboard()
        );
      }
    } else {
      await ctx.reply("‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", Markup.removeKeyboard());
    }
    return ctx.scene.leave();
  }
);

module.exports = deptSupermarketScene;
